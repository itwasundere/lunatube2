// Generated by CoffeeScript 1.4.0
(function() {
  var callbacks, roomid, socket;

  socket = io.connect('http://localhost:8081/');

  /*
  ask server for join request
  server replies with cached data
  ask for data as you go along using the save / load functions
  */


  roomid = get_roomid(window.location.pathname);

  socket.emit('join', {
    roomid: roomid,
    cookie: get_cookie('session')
  });

  socket.on('joined', function(res) {
    var id, obj, _ref;
    document.cookie = 'session=' + res.cookie;
    _ref = res.cache;
    for (id in _ref) {
      obj = _ref[id];
      if (id[0] === '_') {
        continue;
      }
      window.sparkcache[id] = new models[obj.type](obj.attr);
    }
    return window.room = resolve(res.roomid);
  });

  socket.on('update', function(data) {
    var res;
    console.log(data);
    res = callbacks[data.hash];
    if (res) {
      res(data.attr);
    }
    return delete callbacks[data.hash];
  });

  socket.on('saved', function(data) {
    var res;
    console.log(data);
    res = callbacks[data.hash];
    return res(data.id);
  });

  callbacks = {};

  window.store = function(inst, res) {
    var hash;
    hash = guid();
    callbacks[hash] = res;
    return socket.emit('store', {
      id: inst._id,
      type: inst._type,
      hash: hash,
      attr: inst._attrs
    });
  };

  window.fetch = function(inst, res) {
    var hash;
    hash = guid();
    callbacks[hash] = res;
    return socket.emit('fetch', {
      id: inst._id,
      type: inst._type,
      hash: hash
    });
  };

}).call(this);
